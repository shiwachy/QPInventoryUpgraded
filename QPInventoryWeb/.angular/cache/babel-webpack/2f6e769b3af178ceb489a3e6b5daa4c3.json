{"ast":null,"code":"import { Category } from '../category/category.model';\nimport { hyperlink, keyword } from './hyperlink.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./action.service\";\nexport let DMService = /*#__PURE__*/(() => {\n  class DMService {\n    constructor(actionService) {\n      this.actionService = actionService; //Data Manipulation for category Module\n\n      this.catList = new Array();\n      this.keyList = new Array();\n      this.hyperlinkList = new Array();\n      this.foundLinkInfo = new hyperlink();\n    }\n\n    mapCatList(obj) {\n      for (let key in obj) {\n        if (obj.hasOwnProperty(key)) {\n          let categoryObj = obj[key];\n          let category = new Category();\n          category.CategoryId = categoryObj.CategoryId;\n          category.CategoryName = categoryObj.CategoryName || \"\";\n          category.Link = categoryObj.Link || \"\";\n          category.Description = categoryObj.Description || \"\";\n          this.catList.push(category);\n        }\n      }\n    }\n\n    mapKeywordList(obj) {\n      for (let key in obj) {\n        if (obj.hasOwnProperty(key)) {\n          let keywordObj = obj[key];\n\n          let _keyword = new keyword();\n\n          _keyword.KeywordId = keywordObj.KeywordId;\n          _keyword.Keyword = keywordObj.Keyword || \"\";\n          this.keyList.push(_keyword);\n        }\n      }\n    }\n\n    mapHyperlinkList(obj) {\n      for (let key in obj) {\n        if (obj.hasOwnProperty(key)) {\n          let hyperlinkObj = obj[key];\n\n          let _hyperlink = new hyperlink();\n\n          _hyperlink.HyperlinkId = hyperlinkObj.hyperlinkId;\n          _hyperlink.CategoryId = hyperlinkObj.categoryId;\n          _hyperlink.Hyperlink = hyperlinkObj.hyperlink;\n          _hyperlink.Keywords = hyperlinkObj.keywords;\n          this.hyperlinkList.push(_hyperlink);\n        }\n      }\n    }\n\n  }\n\n  DMService.ɵfac = function DMService_Factory(t) {\n    return new (t || DMService)(i0.ɵɵinject(i1.ActionService));\n  };\n\n  DMService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DMService,\n    factory: DMService.ɵfac,\n    providedIn: 'root'\n  });\n  return DMService;\n})();","map":null,"metadata":{},"sourceType":"module"}